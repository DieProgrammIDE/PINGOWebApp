<% title(@event.token) %>
<script>
	event_page = true;
</script>

<% unless ENV["USE_JUGGERNAUT"] == "false" %>
	<% content_for :javascript do %>
		<script type="text/javascript" charset="utf-8" src="http://<%= ENV["JUGGERNAUT_HOST"] %>:<%= ENV["JUGGERNAUT_PORT"] %>/application.js"></script>
	<% end %>
<% end %>

<div class="survey-layout">
	<div class="accordion" id="new-event-survey-accordion">
		<div class="accordion-group">
		    <div class="accordion-heading">
		      <a class="accordion-toggle" data-toggle="collapse" data-parent="#new-event-survey-accordion" href="#survey_quickstart_collapse">
		        <%= t "events.show.add_survey" %>
		      </a>
		    </div>
			<div id="survey_quickstart_collapse" class="accordion-body collapse in">
			      <div class="accordion-inner">
			        <%= render "events/quickstart_survey", event: @event %>
			     </div>
		    </div>
		  </div>
		<% if current_user.questions.any? %>
		  <div class="accordion-group">
		    <div class="accordion-heading">
		        <%= link_to t(".show_questions"), questions_path(format: :json), data: {target: "#survey_fromquestion_collapse", toggle: "collapse", parent: "#new-event-survey-accordion"}, remote: true, class: "accordion-toggle", id: "show_questions_link" %>
		    </div>
		    <div id="survey_fromquestion_collapse" class="accordion-body collapse">
		      <div class="accordion-inner">
		        <%= render "events/quickstart_from_question", event: @event %>
		      </div>
		    </div>
		  </div>
		<% end %>

		 <div class="accordion-group">
		    <div class="accordion-heading">
		      <a class="accordion-toggle" data-toggle="collapse" data-parent="#new-event-survey-accordion" href="#survey_createquestion_collapse">
		        <%= t("surveys.create_from_catalogue") %>
		      </a>
		    </div>
		    <div id="survey_createquestion_collapse" class="accordion-body collapse">
		      <div class="accordion-inner">
		        <%= render "events/quickstart_create_new_question", event: @event %>
		      </div>
		    </div>
		</div>

		  <div class="accordion-group">
		    <div class="accordion-heading">
		      <a class="accordion-toggle" data-toggle="collapse" data-parent="#new-event-survey-accordion" href="#survey_exitquestion_collapse">
		        <%= t("surveys.exit_question") %>
		      </a>
		    </div>
		    <div id="survey_exitquestion_collapse" class="accordion-body collapse">
		      <div class="accordion-inner">
		        <%= render "events/quickstart_exitquestion", event: @event %>
		      </div>
		    </div>
		</div>
	</div>

	<h1><%= @event.name %> <%= link_to @event.token, participate_path(@event.token), id: "big_token" %> <sub><%= link_to icon_tag("pencil"), edit_event_path(@event), title: t("edit"), id: "editEventLink" %></sub> <sub><%= link_to icon_tag("qr"), "#qrModal", title: "QR-Code", id: "qrLink", data: {toggle: "modal"} %></sub> <sub><%= link_to icon_tag("fullscreen"), "#fullscreen", title: t("fullscreen"), id: "fullscreenLink" %></sub></h1>
	<% unless @event.description.blank? %>
	<p class="muted">
		<%= @event.description %>
	</p>
	<% end %>

	<div id="connected-container">
		<%= t ".connected" %>: <span class="badge" id="connected-number">?</span>
	</div>

	<div id="survey-container">

	</div>
</div>

<div class="row-fluid" id="survey-list">
  <div id="survey-list-left" class="span12">
	<h2><%= t ".surveys" %></h2>
	<div id="event-survey-content">
		<% unless @event.surveys.empty? %>
			<%= render "events/surveys_table", event: @event %>

			<%= link_to event_path(@event)+"/export", class: 'btn pull-right' do %>
			  <i class="icon-ok icon-file"> </i> <%= t('events.show.export_results') %>
			<% end %>
			<%= link_to event_path(@event)+"/surveys.json", class: 'btn pull-right' do %>
			  <i class="icon-ok icon-file"> </i> <%= t('events.show.export_results_json') %>
			<% end %>
		<% else %>
			<p id="event-survey-no-surveys"><%= t ".no_surveys" %><br/>
			</p>
		<% end %>
	</div>
  </div>


	<% content_for :javascript do %>
		<script>
			sound_enabled = <%= current_user.wants_sound %>;

  		  <% unless @event.surveys.empty? %>
			jQuery.getScript("<%= event_survey_path(@event, (@load_survey || @event.surveys.desc(:started, :created_at).first)) %>", function() {
				if(History){
					$(window).bind('statechange', function(){
						var State = History.getState(), url = State.url;
						window.PINGO.events.loadSurvey(url);
					});
				}
			});
		  <% end %>

			$("#show_questions_link").bind('ajax:success', function(xhr, data, status) {
				$("#show_questions_link").unbind("ajax:success").attr("data-remote", "false").attr("href", "#survey_fromquestion_collapse");

				templateRow = $("#templateQuestionRow");

				addLink = '<%= link_to icon_tag("chevron-left"), add_question_event_path(id: @event.token, question: "__Q__", duration:  quick_start_settings["duration"], format: :js), class: "add_question_link", remote: true, method: :post %>';

				rows = [];
				$.each(data, function(){
					if(this["question_options"]) {
					  options = jQuery.map(this["question_options"], function(val, i){
						return "&bull; " + val.name;
					  });
					} else {
						options = ["Tag Cloud"];
					}
					current_row = templateRow.clone();
					current_row.attr("data-tags", this["tags_array"].join(","));
					current_row.attr("id", "question_row" + this["_id"]);
					current_row.find("td[data-action='add_question']").html(addLink.replace(/__Q__/, this["_id"]));
					current_row.find("td[data-attribute='name']").text(this["name"]).popover({
						title: this["name"],
						content: options.join("<br>"),
						html: true,
						placement: 'top',
						trigger: 'hover'
					});
					current_row.removeClass("hidden");
					rows.push(current_row);
				});

				$("#question-list tbody").append(rows).find("*[data-placement]").popover({html: true, trigger: 'hover'});;
			});

			var reRenderMath = function(){
				if(MathJax !== undefined) {
					MathJax.Hub.Queue(["Typeset",MathJax.Hub]);
				}
			};

			$("a.compare_link").live('ajax:success', function(xhr, data, status) {
				jQuery("#changed_modal_temp").html(data).modal('show');
				reRenderMath();
			}).bind('ajax:error', function() {
				alert("Leider fuer diese Umfrage nicht verfuegbar.\nUnfortunately, not available for this survey.");
			});

			$("a.compare_modal_link").live('ajax:success', function(xhr, data, status) { // inner dropdown
				jQuery("#changed_modal_body").html(data);
				reRenderMath();
			}).bind('ajax:error', function() {
				alert("Leider fuer diese Umfrage nicht verfuegbar.\nUnfortunately, not available for this survey.");
			});
            $("a.comment_modal_link").live('ajax:success', function(xhr, data, status) {
                jQuery("#changed_modal_temp").html('<div class="modal-body"><a class="close" data-dismiss="modal">&times;</a>' + data + '</div>').modal('show');
            }).bind('ajax:error', function() {
                alert("Leider fuer diese Umfrage nicht verfuegbar.\nUnfortunately, not available for this survey.");
            });
            $(document).on('ajax:error', '#new_question_comment', function(xhr, data, status) {
                alert("Leider ist ein Fehler beim Speichern aufgetreten.\nUnfortunately, an error occurred.");
            });
		</script>
		<% if @event.mathjax? %>
		<script type="text/x-mathjax-config">
		    MathJax.Hub.Config({
		     tex2jax: {
		       inlineMath: [ ['$','$'] ],
		       processEscapes: true
		     }
		    });
		</script>
			<%= mathjax_tag %>
		<% end %>
		<script>
		if (window.fullScreenApi.supportsFullScreen) {
			$("#fullscreenLink").bind("click", function(){
				window.fullScreenApi.requestFullScreen($(".container").get(0));
			}).show();
		}
		</script>
	<% end %>


</div>
<div id="changed_modal_temp" class="modal hide fade">
	<!-- will be shown for comparison of answering behaviour and comments -->
</div>

<br style="clear:both;" />

<br/><p><small><%= link_to t("back"), events_path %></small></p>



<% unless ENV["USE_JUGGERNAUT"] == "false" %>
 <% content_for :javascript do %>
	<script>
 	// refresh connected timer every five seconds
	window.PINGO.events.vars.startConnectedUsersUpdateInterval = window.PINGO.events.startConnectedUsersUpdate("<%= @event.token %>", "#connected-number", "#connected-container", 5);

	</script>
 <% end %>
<% end %>

<% if params[:tour] == "true" %>
 <%= render "tours/enable_tour" %>
 <%= render "tours/events/show", surveys_empty: @event.surveys.empty? %>
<% end %>

<!-- QR code for session -->
<%= render "events/qr", event: @event %>
